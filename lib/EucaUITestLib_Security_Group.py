from se34euca.lib.EucaUITestLib_Base import *

class EucaUITestLib_Security_Group(EucaUITestLib_Base):

    def test_ui_gotopage_security_groups(self):
	print
	print "Started Test: GotoPage Security Groups"
	self.click_element_by_id("euca-logo")
	print
	print "Test: Received the Page Title -> " + self.driver.title
	self.click_element_by_id("dashboard-netsec-sgroup")
	print
	print "Test: Clicked the GoToPage Button"
	self.verify_element_by_id("table-sgroups-new")
	print
	print "Finished Test: GotoPage Security Groups"
	print
	return 0

    def test_ui_create_security_group(self):
	print
	print "Started Test: Create Security Group"
	self.verify_element_by_link_text("Launch new instance")
	print
	print "Test: Go to the Page Security Group"
	self.click_element_by_css_selector("#dashboard-netsec-sgroup > span")
	self.click_element_by_id("table-sgroups-new")
	self.verify_element_by_id("sgroup-name")
	print
	print "Test: Create Security Group"
	self.set_keys_by_id("sgroup-name", "mywebservice")
        self.set_keys_by_id("sgroup-description", "Rules for my webservice. Generated by Selenium")
	print "Click: LINK_TEXT -> Rules"
	self.click_element_by_link_text("Rules")
	self.verify_element_by_id("sgroup-template")
	print "Select: ID -> sgroup-templete, TEXT -> SSH (TCP port 22, for terminal access)"
        Select(self.driver.find_element_by_id("sgroup-template")).select_by_visible_text("SSH (TCP port 22, for terminal access)")
	self.verify_element_by_id("allow-ip")
	self.set_keys_by_id("allow-ip", "0.0.0.0/0")
	print "Click: ID -> sgroup-add-rule"
	self.click_element_by_id("sgroup-add-rule")
	self.verify_element_by_id("sgroup-rule-number-0")
	print "Rule 0: " + self.get_text_by_css_selector("ul.sg-rules-list > li")
	self.verify_element_by_id("sgroup-template")
	print "Select: ID -> sgroup-templete, TEXT -> HTTP (TCP port 80, for web servers)"
        Select(self.driver.find_element_by_id("sgroup-template")).select_by_visible_text("HTTP (TCP port 80, for web servers)")
	self.verify_element_by_id("allow-ip")
        self.set_keys_by_id("allow-ip", "0.0.0.0/0")
	print "Click: ID -> sgroup-add-rule"
        self.click_element_by_id("sgroup-add-rule")
	self.verify_element_by_id("sgroup-rule-number-1")
	print "Rule 1: " + self.get_text_by_xpath("//div[@id='sgroup-rules-list']/ul/li[2]")
	self.verify_element_by_id("sgroup-template")
	print "Select: ID -> sgroup-templete, TEXT -> Custom ICMP"
        Select(self.driver.find_element_by_id("sgroup-template")).select_by_visible_text("Custom ICMP")
	print "Select: ID -> sgroup-type. TEXT -> All"
        Select(self.driver.find_element_by_id("sgroup-type")).select_by_visible_text("All")
        self.verify_element_by_id("allow-ip")
	self.set_keys_by_id("allow-ip", "0.0.0.0/0")
        print "Click: ID -> sgroup-add-rule"
        self.click_element_by_id("sgroup-add-rule")
	self.verify_element_by_id("sgroup-rule-number-2")
	print "Rule 2: " + self.get_text_by_xpath("//div[@id='sgroup-rules-list']/ul/li[3]")
	self.click_element_by_id("sgroup-add-btn")
	print
	print "Finished: Create Security Group"
	print
	return 0

    def test_ui_delete_security_group(self):
	print
	print "Started Test: Delete Security Group"
        self.verify_element_by_link_text("Launch new instance")
	print
	print "Test: Go to the Page Security Group"
	self.click_element_by_css_selector("#dashboard-netsec-sgroup > span")
        self.verify_element_by_id("table-sgroups-new")
        self.click_element_by_css_selector("td.checkbox-cell.sorting_1 > input[type=\"checkbox\"]")
        self.click_element_by_id("more-actions-sgroups")
	print
	print "Test: Delete Security Group"
        self.click_element_by_link_text("Delete")
	self.click_element_by_id("btn-sgroups-delete-delete")	        
	print
	print "Finished: Delete Security Group"
	print
	return 0

    def test_ui_delete_security_group_all(self):
	print
	print "Started Test: Delete Security Group All"
        self.verify_element_by_link_text("Launch new instance")
	print
	print "Test: Go to the Page Security Group"
	self.click_element_by_css_selector("#dashboard-netsec-sgroup > span")
        self.click_element_by_id("sgroups-check-all")
        self.click_element_by_id("more-actions-sgroups")
	print
        print "Test: Delete Security Group All"
        self.click_element_by_link_text("Delete")
        self.click_element_by_id("btn-sgroups-delete-delete")
	print
	print "Finished: Delete Security Group All"
	print
	return 0


if __name__ == "__main__":
    unittest.main()



